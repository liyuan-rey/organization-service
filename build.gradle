plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id 'io.freefair.lombok' version "${lombokPluginVersion}"
}

group = "${defaultProjectGroup}"
version = "${defaultProjectVersion}"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(javaVersion)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url "${aliyunMavenRepository}"	}
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation "net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}"
	implementation "io.github.robsonkades:uuidv7:${uuidv7Version}"
	// compileOnly 'org.projectlombok:lombok'
	// annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.mapstruct:mapstruct:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava {
	options.compilerArgs += ['-Amapstruct.suppressGeneratorTimestamp=true', '-Amapstruct.suppressGeneratorVersionComment=true']
}
